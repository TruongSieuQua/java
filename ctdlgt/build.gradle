plugins {
    id 'java'
    id 'application'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}
dependencies {
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

allprojects {
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

//tasks.withType(JavaExec) {
//    classpath = sourceSets.main.runtimeClasspath
//    systemProperty 'file.encoding', 'UTF-8'
//}
//
//sourceSets.main.allJava.each { file ->
//    if (file.name.endsWith('.java')) {
//        def packagePath = file.parentFile.path.replaceAll('src/main/java/', '').replaceAll('/', '.')
//        def className = file.name.replace('.java', '')
//        def fullClassName = packagePath + '.' + className
//
//        tasks.register("run${className}", JavaExec) {
//            main = fullClassName
//            classpath = sourceSets.main.runtimeClasspath
//        }
//    }
//}
//mainClassName = project.hasProperty('mainClass') ? project.mainClass : 'com.example.MainClass1'